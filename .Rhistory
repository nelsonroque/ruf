# get Level 1 variance of the focal predictor X | within-person (Level 1) variance of the focal predictor X
VarX <- attr(v2, "sc") ** 2
# ==============================================================================================
# STEP 3
# Compute for each Level 2 unit, how many data points there are
print(paste0("STATUS | CALCULATING N RECORDS PER PERSON"))
# The data frame n_records_person contains two variables:
# the ID Variable, and the person specific number of assessments (t_i)
# Keep only observations without any missing variables ** IMPLEMENT **
n_records_person <- n_obs_per_person(data, id_var = id_var)
# Compute person specific WPCR estimates (Equation 9)
print(paste0("STATUS | CALCULATING PERSON-SPECIFIC WCPR (EQUATION 9)"))
wpcr_person <- n_records_person %>%
mutate(wpcr_i = tau_1_1_squared / (tau_1_1_squared + eps_squared / (VarX * (t_i - 1))))
# Summarize person specific WPCR estimates into a sample mean (Equation 10)
print(paste0("STATUS | CALCULATING SAMPLE MEAN WCPR (EQUATION 10)"))
wpcr_group = wpcr_person %>%
summarise(mean_wpcr = mean(wpcr_i, na.rm=T),
median_wpcr = median(wpcr_i, na.rm=T),
sd_wpcr = sd(wpcr_i, na.rm=T),
min_wpcr = min(wpcr_i, na.rm=T),
q10_wpcr = quantile(wpcr_i, probs=0.1, na.rm=T),
q90_wpcr = quantile(wpcr_i, probs=0.9, na.rm=T),
max_wpcr = max(wpcr_i, na.rm=T))
# ==============================================================================================
#
# PREPARE OUTPUT
# place all model parameters into a tibble
param_table = tibble::tibble("epsilon_squared" = eps_squared,
"variance_x" = VarX,
"tau_1_1_squared" = tau_1_1_squared) %>%
bind_cols(wpcr_group)
# prepare list of all results
out <- list("n_obs_person" = n_records_person,
"tau_1_1_squared" = tau_1_1_squared,
"epsilon_squared" = eps_squared,
"wpcr_person" = wpcr_person,
"params" = param_table)
return(out)
}
# setup analysis
Y = "good"
X = "stress_log_cen"
ID = "idvar"
data = burst1.data
wpcr_new <- wpcr2(x = X, y = Y, id_var = ID, data = data, cov_fixed_effects = NULL, cov_random_effects = NULL)
library(tidyverse)
# convenience functions
n_obs_per_person <- function(data = NULL, id_var = NULL, expected_obs = NULL) {
# get count of rows per person
result <- data %>%
mutate(missing = rowSums(is.na(.))) %>%
group_by(!!sym(id_var)) %>%
summarise(t_i = n(),
n_vars_missing = sum(missing))
if(!is.null(expected_obs)) {
result <- result %>%
mutate(diff_records_from_expected = t_i - expected_obs)
}
return(result)
}
# calculation functions
wpcr2 <- function(x = NULL, y = NULL, id_var = NULL, data = NULL, cov_fixed_effects = NULL, cov_random_effects = NULL) {
# print status message
print("-------------------------------------------------")
print("WITHIN-PERSON COUPLING RELIABILITY (WPCR)")
print("Citation (APA below)")
print("Neubauer, A. B., Voelkle, M. C., Voss, A., & Mertens, U. K. (2019). Estimating reliability of within-person couplings in a multilevel framework. Journal of personality assessment, 1-12.")
print("-------------------------------------------------")
# ==============================================================================================
# STEP 1
# prepare model formula
mod1_formula <- paste0(y, "~", x, "+", paste0(cov_fixed_effects, collapse="+"), paste0("(", x, paste0(cov_random_effects, collapse="+"), "|", id_var,")"))
# print status message
print(paste0("STATUS | RUNNING MODEL: ", mod1_formula))
# run multilevel model predicting Y from X and the covariates
mod1 <- lmer(mod1_formula, data=data, na.action="na.omit", REML=T)
# get random slope variance
# for info on VarCorr, see ?VarCorr
v <- VarCorr(mod1)
vc <- as.data.frame(v)
# get the variance of the random slope of the focal predictor x | tau_1_1_squared
tau_1_1_squared <- vc[vc$grp == id_var, ]$vcov[2] # *** SUSPECT LINE ***
# get Level 1 residual variance | eps_squared
eps_squared <- attr(v, "sc") ** 2
# ==============================================================================================
# STEP 2
# run multilevel model predicting
mod2_formula <- paste0(x, "~", 1, "+", paste0("(", 1, "|", id_var,")"))
# print status message
print(paste0("STATUS | RUNNING MODEL: ", mod2_formula))
# run multilevel model
mod2 <- lmer(mod2_formula, data=data, na.action="na.omit", REML=T)
# get random slope variance
# for info on VarCorr, see ?VarCorr
v2 <- VarCorr(mod2)
vc2 <- as.data.frame(v2)
# get Level 1 variance of the focal predictor X | within-person (Level 1) variance of the focal predictor X
VarX <- attr(v2, "sc") ** 2
# ==============================================================================================
# STEP 3
# Compute for each Level 2 unit, how many data points there are
print(paste0("STATUS | CALCULATING N RECORDS PER PERSON"))
# The data frame n_records_person contains two variables:
# the ID Variable, and the person specific number of assessments (t_i)
# Keep only observations without any missing variables ** IMPLEMENT **
n_records_person <- n_obs_per_person(data, id_var = id_var)
# Compute person specific WPCR estimates (Equation 9)
print(paste0("STATUS | CALCULATING PERSON-SPECIFIC WCPR (EQUATION 9)"))
wpcr_person <- n_records_person %>%
mutate(wpcr_i = tau_1_1_squared / (tau_1_1_squared + eps_squared / (VarX * (t_i - 1))))
# Summarize person specific WPCR estimates into a sample mean (Equation 10)
print(paste0("STATUS | CALCULATING SAMPLE MEAN WCPR (EQUATION 10)"))
wpcr_group = wpcr_person %>%
summarise(mean_wpcr = mean(wpcr_i, na.rm=T),
median_wpcr = median(wpcr_i, na.rm=T),
sd_wpcr = sd(wpcr_i, na.rm=T),
min_wpcr = min(wpcr_i, na.rm=T),
q10_wpcr = quantile(wpcr_i, probs=0.1, na.rm=T),
q90_wpcr = quantile(wpcr_i, probs=0.9, na.rm=T),
max_wpcr = max(wpcr_i, na.rm=T))
# ==============================================================================================
#
# PREPARE OUTPUT
# place all model parameters into a tibble
param_table = tibble::tibble("epsilon_squared" = eps_squared,
"variance_x" = VarX,
"tau_1_1_squared" = tau_1_1_squared) %>%
bind_cols(wpcr_group)
# prepare list of all results
out <- list("n_obs_person" = n_records_person,
"tau_1_1_squared" = tau_1_1_squared,
"epsilon_squared" = eps_squared,
"wpcr_person" = wpcr_person,
"params" = param_table)
return(out)
}
# setup analysis
Y = "good"
X = "stress_log_cen"
ID = "idvar"
data = burst1.data
wpcr_new <- wpcr2(x = X, y = Y, id_var = ID, data = data, cov_fixed_effects = NULL, cov_random_effects = NULL)
library(tidyverse)
# convenience functions
n_obs_per_person <- function(data = NULL, id_var = NULL, expected_obs = NULL) {
# get count of rows per person
result <- data %>%
mutate(missing = rowSums(is.na(.))) %>%
group_by(!!sym(id_var)) %>%
summarise(t_i = n(),
n_vars_missing = sum(missing))
if(!is.null(expected_obs)) {
result <- result %>%
mutate(diff_records_from_expected = t_i - expected_obs)
}
return(result)
}
# calculation functions
wpcr2 <- function(x = NULL, y = NULL, id_var = NULL, data = NULL, cov_fixed_effects = NULL, cov_random_effects = NULL) {
# print status message
print("-------------------------------------------------")
print("WITHIN-PERSON COUPLING RELIABILITY (WPCR)")
print("Citation (APA below)")
print("Neubauer, A. B., Voelkle, M. C., Voss, A., & Mertens, U. K. (2019). Estimating reliability of within-person couplings in a multilevel framework. Journal of personality assessment, 1-12.")
print("-------------------------------------------------")
# ==============================================================================================
# STEP 1
# prepare model formula
mod1_formula <- paste0(y, "~", x, "+", paste0(cov_fixed_effects, collapse="+"), paste0("(", x, paste0(cov_random_effects, collapse="+"), "|", id_var,")"))
# print status message
print(paste0("STATUS | RUNNING MODEL: ", mod1_formula))
# run multilevel model predicting Y from X and the covariates
mod1 <- lmer(mod1_formula, data=data, na.action="na.omit", REML=T)
# get random slope variance
# for info on VarCorr, see ?VarCorr
v <- VarCorr(mod1)
vc <- as.data.frame(v)
# get the variance of the random slope of the focal predictor x | tau_1_1_squared
tau_1_1_squared <- vc[vc$grp == id_var, ]$vcov[2] # *** SUSPECT LINE ***
# get Level 1 residual variance | eps_squared
eps_squared <- attr(v, "sc") ** 2
# ==============================================================================================
# STEP 2
# run multilevel model predicting
mod2_formula <- paste0(x, "~", 1, "+", paste0("(", 1, "|", id_var,")"))
# print status message
print(paste0("STATUS | RUNNING MODEL: ", mod2_formula))
# run multilevel model
mod2 <- lmer(mod2_formula, data=data, na.action="na.omit", REML=T)
# get random slope variance
# for info on VarCorr, see ?VarCorr
v2 <- VarCorr(mod2)
vc2 <- as.data.frame(v2)
# get Level 1 variance of the focal predictor X | within-person (Level 1) variance of the focal predictor X
VarX <- attr(v2, "sc") ** 2
# ==============================================================================================
# STEP 3
# Compute for each Level 2 unit, how many data points there are
print(paste0("STATUS | CALCULATING NUMBER OF RECORDS PER PERSON"))
# The data frame n_records_person contains two variables:
# the ID Variable, and the person specific number of assessments (t_i)
# Keep only observations without any missing variables ** IMPLEMENT **
n_records_person <- n_obs_per_person(data, id_var = id_var)
# Compute person specific WPCR estimates (Equation 9)
print(paste0("STATUS | CALCULATING PERSON-SPECIFIC WCPR (EQUATION 9)"))
wpcr_person <- n_records_person %>%
mutate(wpcr_i = tau_1_1_squared / (tau_1_1_squared + eps_squared / (VarX * (t_i - 1))))
# Summarize person specific WPCR estimates into a sample mean (Equation 10)
print(paste0("STATUS | CALCULATING SAMPLE MEAN WCPR (EQUATION 10)"))
wpcr_group = wpcr_person %>%
summarise(mean_wpcr = mean(wpcr_i, na.rm=T),
median_wpcr = median(wpcr_i, na.rm=T),
sd_wpcr = sd(wpcr_i, na.rm=T),
min_wpcr = min(wpcr_i, na.rm=T),
q10_wpcr = quantile(wpcr_i, probs=0.1, na.rm=T),
q90_wpcr = quantile(wpcr_i, probs=0.9, na.rm=T),
max_wpcr = max(wpcr_i, na.rm=T))
# ==============================================================================================
#
# PREPARE OUTPUT
# place all model parameters into a tibble
param_table = tibble::tibble("epsilon_squared" = eps_squared,
"variance_x" = VarX,
"tau_1_1_squared" = tau_1_1_squared) %>%
bind_cols(wpcr_group)
# prepare list of all results
out <- list("n_obs_person" = n_records_person,
"tau_1_1_squared" = tau_1_1_squared,
"epsilon_squared" = eps_squared,
"wpcr_person" = wpcr_person,
"params" = param_table)
return(out)
}
# setup analysis
Y = "good"
X = "stress_log_cen"
ID = "idvar"
data = burst1.data
wpcr_new <- wpcr2(x = X, y = Y, id_var = ID, data = data, cov_fixed_effects = NULL, cov_random_effects = NULL)
library(tidyverse)
# convenience functions
n_obs_per_person <- function(data = NULL, id_var = NULL, expected_obs = NULL) {
# get count of rows per person
result <- data %>%
mutate(missing = rowSums(is.na(.))) %>%
group_by(!!sym(id_var)) %>%
summarise(t_i = n(),
n_vars_missing = sum(missing))
if(!is.null(expected_obs)) {
result <- result %>%
mutate(diff_records_from_expected = t_i - expected_obs)
}
return(result)
}
# calculation functions
wpcr2 <- function(x = NULL, y = NULL, id_var = NULL, data = NULL, cov_fixed_effects = NULL, cov_random_effects = NULL) {
# print status message
print("-------------------------------------------------")
print("WITHIN-PERSON COUPLING RELIABILITY (WPCR)")
print("Citation (APA below)")
print("Neubauer, A. B., Voelkle, M. C., Voss, A., & Mertens, U. K. (2019). Estimating reliability of within-person couplings in a multilevel framework. Journal of personality assessment, 1-12.")
print("-------------------------------------------------")
# ==============================================================================================
# STEP 1
# prepare model formula
mod1_formula <- paste0(y, "~", x, "+", paste0(cov_fixed_effects, collapse="+"), paste0("(", x, paste0(cov_random_effects, collapse="+"), "|", id_var,")"))
# print status message
print(paste0("STATUS | RUNNING MODEL: ", mod1_formula))
# run multilevel model predicting Y from X and the covariates
mod1 <- lmer(mod1_formula, data=data, na.action="na.omit", REML=T)
# get random slope variance
# for info on VarCorr, see ?VarCorr
v <- VarCorr(mod1)
vc <- as.data.frame(v)
# get the variance of the random slope of the focal predictor x | tau_1_1_squared
tau_1_1_squared <- vc[vc$grp == id_var, ]$vcov[2] # *** SUSPECT LINE ***
# get Level 1 residual variance | eps_squared
eps_squared <- attr(v, "sc") ** 2
# ==============================================================================================
# STEP 2
# run multilevel model predicting
mod2_formula <- paste0(x, "~", 1, "+", paste0("(", 1, "|", id_var,")"))
# print status message
print(paste0("STATUS | RUNNING MODEL: ", mod2_formula))
# run multilevel model
mod2 <- lmer(mod2_formula, data=data, na.action="na.omit", REML=T)
# get random slope variance
# for info on VarCorr, see ?VarCorr
v2 <- VarCorr(mod2)
vc2 <- as.data.frame(v2)
# get Level 1 variance of the focal predictor X | within-person (Level 1) variance of the focal predictor X
VarX <- attr(v2, "sc") ** 2
# ==============================================================================================
# STEP 3
# Compute for each Level 2 unit, how many data points there are
print(paste0("STATUS | CALCULATING NUMBER OF RECORDS PER PERSON"))
# The data frame n_records_person contains two variables:
# the ID Variable, and the person specific number of assessments (t_i)
# Keep only observations without any missing variables ** IMPLEMENT **
n_records_person <- n_obs_per_person(data, id_var = id_var)
# Compute person specific WPCR estimates (Equation 9)
print(paste0("STATUS | CALCULATING PERSON-SPECIFIC WCPR (EQUATION 9)"))
wpcr_person <- n_records_person %>%
mutate(wpcr_i = tau_1_1_squared / (tau_1_1_squared + eps_squared / (VarX * (t_i - 1))))
# Summarize person specific WPCR estimates into a sample mean (Equation 10)
print(paste0("STATUS | CALCULATING SAMPLE MEAN WCPR (EQUATION 10)"))
wpcr_group = wpcr_person %>%
summarise(mean_wpcr = mean(wpcr_i, na.rm=T),
median_wpcr = median(wpcr_i, na.rm=T),
sd_wpcr = sd(wpcr_i, na.rm=T),
min_wpcr = min(wpcr_i, na.rm=T),
q10_wpcr = quantile(wpcr_i, probs=0.1, na.rm=T),
q90_wpcr = quantile(wpcr_i, probs=0.9, na.rm=T),
max_wpcr = max(wpcr_i, na.rm=T))
# ==============================================================================================
#
# PREPARE OUTPUT
# place all model parameters into a tibble
param_table = tibble::tibble("epsilon_squared" = eps_squared,
"variance_x" = VarX,
"tau_1_1_squared" = tau_1_1_squared) %>%
bind_cols(wpcr_group)
# prepare list of all results
out <- list("n_obs_person" = n_records_person,
"tau_1_1_squared" = tau_1_1_squared,
"epsilon_squared" = eps_squared,
"wpcr_person" = wpcr_person,
"params" = param_table)
return(out)
}
# load data
burst1.data <- read.delim("burst1.dat", header=T)
# setup analysis
Y = "good"
X = "stress_log_cen"
ID = "idvar"
data = burst1.data
wpcr_new <- wpcr2(x = X, y = Y, id_var = ID, data = data, cov_fixed_effects = NULL, cov_random_effects = NULL)
reprex(burst1.data)
reprex::reprex(burst1.data)
# load data
burst1.data <- read.delim("burst1.dat", header=T)
reprex::reprex(burst1.data)
wpcr_new <- wpcr2(x = X, y = Y, id_var = ID, data = data, cov_fixed_effects = NULL, cov_random_effects = NULL)
View(wpcr_new)
wpcr <- function(x = NULL, y = NULL, id_var = NULL, data = NULL, cov_fixed_effects = NULL, cov_random_effects = NULL) {
# print status message
print("-------------------------------------------------")
print("WITHIN-PERSON COUPLING RELIABILITY (WPCR)")
print("Citation (APA below)")
print("Neubauer, A. B., Voelkle, M. C., Voss, A., & Mertens, U. K. (2019). Estimating reliability of within-person couplings in a multilevel framework. Journal of personality assessment, 1-12.")
print("-------------------------------------------------")
# ==============================================================================================
# STEP 1
# prepare model formula
mod1_formula <- paste0(y, "~", x, "+", paste0(cov_fixed_effects, collapse="+"), paste0("(", x, paste0(cov_random_effects, collapse="+"), "|", id_var,")"))
# print status message
print(paste0("STATUS | RUNNING MODEL: ", mod1_formula))
# run multilevel model predicting Y from X and the covariates
mod1 <- lmer(mod1_formula, data=data, na.action="na.omit", REML=T)
# get random slope variance
# for info on VarCorr, see ?VarCorr
v <- VarCorr(mod1)
vc <- as.data.frame(v)
# get the variance of the random slope of the focal predictor x | tau_1_1_squared
tau_1_1_squared <- vc[vc$grp == id_var, ]$vcov[2] # *** SUSPECT LINE ***
# get Level 1 residual variance | eps_squared
eps_squared <- attr(v, "sc") ** 2
# ==============================================================================================
# STEP 2
# run multilevel model predicting
mod2_formula <- paste0(x, "~", 1, "+", paste0("(", 1, "|", id_var,")"))
# print status message
print(paste0("STATUS | RUNNING MODEL: ", mod2_formula))
# run multilevel model
mod2 <- lmer(mod2_formula, data=data, na.action="na.omit", REML=T)
# get random slope variance
# for info on VarCorr, see ?VarCorr
v2 <- VarCorr(mod2)
vc2 <- as.data.frame(v2)
# get Level 1 variance of the focal predictor X | within-person (Level 1) variance of the focal predictor X
VarX <- attr(v2, "sc") ** 2
# ==============================================================================================
# STEP 3
# Compute for each Level 2 unit, how many data points there are
print(paste0("STATUS | CALCULATING NUMBER OF RECORDS PER PERSON"))
# The data frame n_records_person contains two variables:
# the ID Variable, and the person specific number of assessments (t_i)
# Keep only observations without any missing variables ** IMPLEMENT **
n_records_person <- n_obs_per_person(data, id_var = id_var)
# Compute person specific WPCR estimates (Equation 9)
print(paste0("STATUS | CALCULATING PERSON-SPECIFIC WCPR (EQUATION 9)"))
wpcr_person <- n_records_person %>%
mutate(wpcr_i = tau_1_1_squared / (tau_1_1_squared + eps_squared / (VarX * (t_i - 1))))
# Summarize person specific WPCR estimates into a sample mean (Equation 10)
print(paste0("STATUS | CALCULATING SAMPLE MEAN WCPR (EQUATION 10)"))
wpcr_group = wpcr_person %>%
summarise(mean_wpcr = mean(wpcr_i, na.rm=T),
median_wpcr = median(wpcr_i, na.rm=T),
sd_wpcr = sd(wpcr_i, na.rm=T),
min_wpcr = min(wpcr_i, na.rm=T),
q10_wpcr = quantile(wpcr_i, probs=0.1, na.rm=T),
q90_wpcr = quantile(wpcr_i, probs=0.9, na.rm=T),
max_wpcr = max(wpcr_i, na.rm=T))
# ==============================================================================================
#
# PREPARE OUTPUT
# place all model parameters into a tibble
param_table = tibble::tibble("epsilon_squared" = eps_squared,
"variance_x" = VarX,
"tau_1_1_squared" = tau_1_1_squared) %>%
bind_cols(wpcr_group)
# prepare list of all results
out <- list("n_obs_person" = n_records_person,
"tau_1_1_squared" = tau_1_1_squared,
"epsilon_squared" = eps_squared,
"wpcr_person" = wpcr_person,
"params" = param_table)
return(out)
}
wpcr <- function(x = NULL, y = NULL, id_var = NULL, data = NULL, cov_fixed_effects = NULL, cov_random_effects = NULL) {
# print status message
print("-------------------------------------------------")
print("WITHIN-PERSON COUPLING RELIABILITY (WPCR)")
print("Citation (APA below)")
print("Neubauer, A. B., Voelkle, M. C., Voss, A., & Mertens, U. K. (2019). Estimating reliability of within-person couplings in a multilevel framework. Journal of personality assessment, 1-12.")
print("-------------------------------------------------")
# ==============================================================================================
# STEP 1
# prepare model formula
mod1_formula <- paste0(y, "~", x, "+", paste0(cov_fixed_effects, collapse="+"), paste0("(", x, paste0(cov_random_effects, collapse="+"), "|", id_var,")"))
# print status message
print(paste0("STATUS | RUNNING MODEL: ", mod1_formula))
# run multilevel model predicting Y from X and the covariates
mod1 <- lmer(mod1_formula, data=data, na.action="na.omit", REML=T)
# get random slope variance
# for info on VarCorr, see ?VarCorr
v <- VarCorr(mod1)
vc <- as.data.frame(v)
# get the variance of the random slope of the focal predictor x | tau_1_1_squared
tau_1_1_squared <- vc[vc$grp == id_var, ]$vcov[2] # *** SUSPECT LINE ***
# get Level 1 residual variance | eps_squared
eps_squared <- attr(v, "sc") ** 2
# ==============================================================================================
# STEP 2
# run multilevel model predicting
mod2_formula <- paste0(x, "~", 1, "+", paste0("(", 1, "|", id_var,")"))
# print status message
print(paste0("STATUS | RUNNING MODEL: ", mod2_formula))
# run multilevel model
mod2 <- lmer(mod2_formula, data=data, na.action="na.omit", REML=T)
# get random slope variance
# for info on VarCorr, see ?VarCorr
v2 <- VarCorr(mod2)
vc2 <- as.data.frame(v2)
# get Level 1 variance of the focal predictor X | within-person (Level 1) variance of the focal predictor X
VarX <- attr(v2, "sc") ** 2
# ==============================================================================================
# STEP 3
# Compute for each Level 2 unit, how many data points there are
print(paste0("STATUS | CALCULATING NUMBER OF RECORDS PER PERSON"))
# The data frame n_records_person contains two variables:
# the ID Variable, and the person specific number of assessments (t_i)
# Keep only observations without any missing variables ** IMPLEMENT **
n_records_person <- n_obs_per_person(data, id_var = id_var)
# Compute person specific WPCR estimates (Equation 9)
print(paste0("STATUS | CALCULATING PERSON-SPECIFIC WCPR (EQUATION 9)"))
wpcr_person <- n_records_person %>%
mutate(wpcr_i = tau_1_1_squared / (tau_1_1_squared + eps_squared / (VarX * (t_i - 1))))
# Summarize person specific WPCR estimates into a sample mean (Equation 10)
print(paste0("STATUS | CALCULATING SAMPLE MEAN WCPR (EQUATION 10)"))
wpcr_group = wpcr_person %>%
summarise(mean_wpcr = mean(wpcr_i, na.rm=T),
median_wpcr = median(wpcr_i, na.rm=T),
sd_wpcr = sd(wpcr_i, na.rm=T),
min_wpcr = min(wpcr_i, na.rm=T),
q10_wpcr = quantile(wpcr_i, probs=0.1, na.rm=T),
q90_wpcr = quantile(wpcr_i, probs=0.9, na.rm=T),
max_wpcr = max(wpcr_i, na.rm=T))
# ==============================================================================================
#
# PREPARE OUTPUT
# place all model parameters into a tibble
param_table = tibble::tibble("epsilon_squared" = eps_squared,
"variance_x" = VarX,
"tau_1_1_squared" = tau_1_1_squared) %>%
bind_cols(wpcr_group)
# prepare list of all results
out <- list("n_obs_person" = n_records_person,
"tau_1_1_squared" = tau_1_1_squared,
"epsilon_squared" = eps_squared,
"wpcr_person" = wpcr_person,
"params" = param_table)
return(out)
}
library(roxygen2)
library(devtools)
setwd("~/GitHub/ruf")
#setwd("~/Apps/GitHub/RM2C2")
document()
setwd("..")
install("ruf")
setwd("~/GitHub/ruf")
#setwd("~/Apps/GitHub/RM2C2")
setwd("~/GitHub/ruf")
#setwd("~/Apps/GitHub/RM2C2")
document()
library(roxygen2)
library(devtools)
setwd("~/GitHub/ruf")
document()
